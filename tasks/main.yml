---
- name: Install Debian packages
  when: ansible_os_family == 'Debian'
  block:
    - name: Install NFS client packages
      ansible.builtin.package:
        name: nfs-common
        state: "{{ nfs_packages_state }}"

    - name: Install NFS server packages
      ansible.builtin.package:
        name: nfs-kernel-server
        state: "{{ nfs_packages_state }}"
      when: nfs_server

- name: Install ArchLinux packages
  ansible.builtin.package:
    name: nfs-common
    state: "{{ nfs_packages_state }}"
  when: ansible_os_family == 'Archlinux'

- name: Install RedHat packages
  when: ansible_os_family == 'RedHat'
  block:
    - name: Install NFS client packages
      ansible.builtin.package:
        name: nfs-utils
        state: "{{ nfs_packages_state }}"

    - name: Install NFS server packages
      ansible.builtin.package:
        name: portmap
        state: "{{ nfs_packages_state }}"
      when: nfs_server

- name: Create NFS export directories
  ansible.builtin.file:
    path: "{{ item.strip().split()[0] }}"
    state: directory
  loop: "{{ nfs_exports }}"
  when: nfs_server
  notify: reload nfs

- name: Configure NFS exports
  ansible.builtin.template:
    src: "{{ nfs_conf_template }}"
    dest: "{{ nfs_conf_path }}"
  when: nfs_server
  notify: reload nfs

- name: Manage Debian services
  ansible.builtin.service:
    name: nfs-kernel-server
    state: "{{ nfs_service_status }}"
    enabled: "{{ nfs_service_enabled }}"
  loop: "{{ _nfs_services_server }}"
  when:
    - ansible_os_family == 'Debian'
    - nfs_server

- name: Manage ArchLinux services
  ansible.builtin.service:
    name: nfs-server
    state: "{{ nfs_service_status }}"
    enabled: "{{ nfs_service_enabled }}"
  loop: "{{ _nfs_services_server }}"
  when:
    - ansible_os_family == 'Archlinux'
    - nfs_server

- name: Manage RedHat services
  when: ansible_os_family == 'RedHat'
  block:
    - name: Manage NFS server service
      ansible.builtin.service:
        name: nfs-server
        state: "{{ nfs_service_status }}"
        enabled: "{{ nfs_service_enabled }}"
      when: nfs_server

    - name: Manage NFS rpcbind service
      ansible.builtin.service:
        name: rpcbind
        state: "{{ nfs_service_status }}"
        enabled: "{{ nfs_service_enabled }}"
